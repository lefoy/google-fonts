/**
*
* Remove px unit
* Usage: remove-px(13px) // return 13
*
**/

@function remove-px( $target ) {
    @if not unitless( $target ) {
        @return $target / 1px ;
    } @else {
        @return $target;
    }
}


/**
*
* Mixin to convert number in REM unit
* Usage: @include rem(13);
*        @include rem(13px);
*        @include rem(13 20 40);
*        @include rem(13px 20px 40px);
*
**/

@function rem($size) {
    $values: ();
    @if type-of( $size ) == list {
        @each $current in $size {
            $values: append( $values, remove-px($current) / 16 * 1rem);
        }
    } @else {
        $values: remove-px($size) / 16 * 1rem;
    }
    @return $values;
}


/**
*
* Mixin to use REM font-size and line-height with PX fallback
* Usage: @include font-size(13);
*        @include font-size(13px);
*
**/

@mixin font-size($size) {
    font-size: $size;
    font-size: rem($size);
}

@mixin line-height($size) {
    line-height: $size;
    line-height: rem($size);
}


/**
*
* Displays an element as an image
* Usage: @include img-replacement(../img/icon.png);
*
**/

@mixin img-replacement($img) {
    width: image-width($img);
    height: image-height($img);
    background-image: url($img);
    @extend %ir;
}


/**
*
* Absolute position mixin
* Usage: @include position-absolute(10px, 10px, 5px, 15px);
*
**/

@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
    position: absolute;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}


/**
*
* Mixins
*
**/

@mixin transition($transition...) {
    -webkit-transition: $transition;
       -moz-transition: $transition;
         -o-transition: $transition;
            transition: $transition;
}
@mixin transition-property($property...) {
    -webkit-transition-property: $property;
       -moz-transition-property: $property;
         -o-transition-property: $property;
            transition-property: $property;
}
@mixin transition-duration($duration...) {
    -webkit-transition-duration: $duration;
       -moz-transition-duration: $duration;
         -o-transition-duration: $duration;
            transition-duration: $duration;
}
@mixin transition-timing-function($timing...) {
    -webkit-transition-timing-function: $timing;
       -moz-transition-timing-function: $timing;
         -o-transition-timing-function: $timing;
            transition-timing-function: $timing;
}
@mixin transition-delay($delay...) {
    -webkit-transition-delay: $delay;
       -moz-transition-delay: $delay;
         -o-transition-delay: $delay;
            transition-delay: $delay;
}
@mixin border-radius($property...) {
    -webkit-border-radius: $property;
       -moz-border-radius: $property;
         -o-border-radius: $property;
            border-radius: $property;
}


/**
*
* Easing
*
**/

/*==========  Cubic  ==========*/
$easeInCubic: cubic-bezier(0.550, 0.055, 0.675, 0.190);
$easeOutCubic: cubic-bezier(0.215, 0.610, 0.355, 1.000);
$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1.000);

/*==========  Circ ==========*/
$easeInCirc: cubic-bezier(0.600, 0.040, 0.980, 0.335);
$easeOutCirc: cubic-bezier(0.075, 0.820, 0.165, 1.000);
$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.150, 0.860);

/*==========  Expo ==========*/
$easeInExpo: cubic-bezier(0.950, 0.050, 0.795, 0.035);
$easeOutExpo: cubic-bezier(0.190, 1.000, 0.220, 1.000);
$easeInOutExpo: cubic-bezier(1.000, 0.000, 0.000, 1.000);

/*==========  Quad ==========*/
$easeInQuad: cubic-bezier(0.550, 0.085, 0.680, 0.530);
$easeOutQuad: cubic-bezier(0.250, 0.460, 0.450, 0.940);
$easeInOutQuad: cubic-bezier(0.455, 0.030, 0.515, 0.955);

/*==========  Quart ==========*/
$easeInQuart: cubic-bezier(0.895, 0.030, 0.685, 0.220);
$easeOutQuart: cubic-bezier(0.165, 0.840, 0.440, 1.000);
$easeInOutQuart: cubic-bezier(0.770, 0.000, 0.175, 1.000);

/*==========  Quint ==========*/
$easeInQuint: cubic-bezier(0.755, 0.050, 0.855, 0.060);
$easeOutQuint: cubic-bezier(0.230, 1.000, 0.320, 1.000);
$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000);

/*==========  Sine ==========*/
$easeInSine: cubic-bezier(0.470, 0.000, 0.745, 0.715);
$easeOutSine: cubic-bezier(0.390, 0.575, 0.565, 1.000);
$easeInOutSine: cubic-bezier(0.445, 0.050, 0.550, 0.950);

/*==========  Back ==========*/
$easeInBack: cubic-bezier(0.600, -0.280, 0.735, 0.045);
$easeOutBack: cubic-bezier(0.175,  0.885, 0.320, 1.275);
$easeInOutBack: cubic-bezier(0.680, -0.550, 0.265, 1.550);
